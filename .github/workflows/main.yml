# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle
env:  
  S3_BUCKET_NAME: buildrepo 
  PROJECT_NAME: ItNovation
  CODE_DEPLOY_APP_NAME: ItNovation-webservice
  CODE_DEPLOY_GROUP_NAME: ItNovation
  
name: deploy

on:
  release:
    types: [push]
  push:
    branches: 
      - main
      - fix/final
    
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ItNovation
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '17'
 
      - name: Grant execute permisson for gradlew # gradlew 실행 권한 부여
        run: chmod +x gradlew
      - run: ls -al
      - name: Build with Gradle
        run: ./gradlew clean -x test build


      - name: Get current time
        uses: 1466587594/get-current-time@v2  
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss 
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}" 
        shell: bash

      - name: Generate deployment package # (final)
        run: |
          mkdir -p before-deploy
          cp scripts/*.sh before-deploy/
          cp appspec.yml before-deploy/
          cp build/libs/*.jar before-deploy/
          cd before-deploy && zip -r before-deploy *
          cd ../ && mkdir -p deploy
          mv before-deploy/before-deploy.zip deploy/$PROJECT_NAME.zip
        shell: bash
        
      - name: Make zip file
        run: zip -r ./$PROJECT_NAME.zip .         
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1      
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3 #변경사항 있음! ./$PROJECT_NAME.zip ->  ./deploy/$PROJECT_NAME.zip 로 변경!!
        run: aws s3 cp --region ap-northeast-2 ./deploy/$PROJECT_NAME.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$PROJECT_NAME.zip  #(14)

      - name: Code Deploy 
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODE_DEPLOY_GROUP_NAME --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$PROJECT_NAME.zip
